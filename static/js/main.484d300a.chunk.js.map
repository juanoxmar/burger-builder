{"version":3,"sources":["containers/Checkout/ContactData/ContactData.module.css","containers/Checkout/ContactData/Form/Form.module.css","components/Order/Order.module.css","components/Burger/BurgerIngredient/BurgerIngredient.tsx","components/Burger/Burger.tsx","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","components/UI/Backdrop/Backdrop.tsx","components/UI/Modal/Modal.tsx","components/UI/Button/Button.tsx","components/Burger/OrderSummary/OrderSummary.tsx","components/UI/Spinner/Spinner.tsx","containers/hoc/withErrorHandling.tsx","axios-orders.ts","store/actions/burgerBuilder.ts","store/actions/actionTypes.ts","store/actions/order.ts","store/actions/auth.ts","containers/BurgerBuilder/BurgerBuilder.tsx","components/Logo/Logo.tsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.tsx","components/Navigation/NavigationItems/NavigationItems.tsx","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.tsx","components/Navigation/Toolbar/Toolbar.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","containers/Layout/Layout.tsx","components/Order/CheckoutSummary/CheckoutSummary.tsx","containers/Checkout/ContactData/Form/Form.tsx","containers/Checkout/ContactData/ContactData.tsx","containers/Checkout/Checkout.tsx","components/Order/Order.tsx","containers/Checkout/Orders/Orders.tsx","containers/Auth/Auth.tsx","containers/Auth/Logout/Logout.tsx","App.tsx","store/reducers/burgerBuilder.ts","store/utility.ts","store/reducers/order.ts","store/reducers/auth.ts","index.tsx","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Auth/Auth.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","containers/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css"],"names":["module","exports","BurgerIngredient","ingredient","type","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","Burger","ingredients","transformedIngredients","Object","keys","map","key","Array","_","i","reduce","arr","el","concat","length","BuildControl","label","added","removed","disabled","Label","Less","onClick","More","controls","BuildControls","ingredientAdded","ingredientRemoved","price","purchaseable","ordered","isAuth","toFixed","control","OrderButton","Backdrop","show","clicked","Modal","nextProps","this","props","children","Fragment","modalClosed","style","transform","opacity","React","Component","Button","btnType","join","OrderSummary","ingredientSummary","purchaseCancel","purchaseContinue","Spinner","Loader","withErrorHandler","WrappedComponent","axios","reqInter","resInter","errorConfirmedHandler","setState","error","state","interceptors","request","use","req","response","res","eject","message","instance","create","baseURL","KEY","initIngredients","dispatch","a","get","data","console","purchaseSuccess","id","orderData","orderId","authSuccess","token","userId","idToken","logOut","localStorage","removeItem","checkAuthTimeout","expireTime","setTimeout","mapState","ing","lettuce","burger","bacon","cheese","meat","prc","err","auth","mapDispatch","addHandler","actionCreator","delHandler","initHandler","connector","connect","purchasing","updatePurchaseState","sum","purchaseHandler","history","push","purchaseContineHandler","pathname","orderSummary","disableInfo","disableButton","Logo","height","src","burgerLogo","alt","NavigationItem","link","to","activeClassName","active","exact","NavigationItems","isAuthenticated","DrawerToggle","click","Toolbar","open","DesktopOnly","SideDrawer","closed","attachedClasses","Close","Open","showSideDrawer","sideDrawerCloseHandler","openDrawerHandler","prevState","Content","CheckoutSummary","cancel","continueCheck","width","margin","orderBurger","post","name","purchaseStart","ingReset","purReset","loading","order","purchased","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","spacing","createMuiTheme","palette","primary","orange","schema","yup","required","email","address","city","zip","min","delivery","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","formState","onSubmit","customer","Input","ThemeProvider","TextField","inputRef","helperText","variant","as","select","value","MenuItem","defaultValue","color","size","isValid","orderHandler","form","ContactData","cancelHandler","goBack","continueHandler","replace","path","match","url","component","Order","totalPrice","ingAll","amount","ingOut","textTransform","border","padding","onFetchOrders","fetchedOrders","getItem","orders","fetchOrders","orderRender","index","password","passwordConfirmation","oneOf","undefined","onAuth","method","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","toString","localId","useState","setMode","errorMessage","authRedirect","PwConfirm","Form","Card","Input2","Typography","onLogout","authCheck","routes","Auth","BurgerBuilder","Checkout","Orders","Logout","initialState","INGREDIENT_PRICES","reducer","action","updateObject","oldObject","updatedValues","newOrder","rootReducer","combineReducers","burgerBuildReducer","orderReducer","authReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.484d300a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Form_Input__XV8gW\",\"InputElement\":\"Form_InputElement__1QQ8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\nimport classes from './BurgerIngredient.module.css';\n\ntype ingredientProps = {\n  type: string;\n};\n\nconst BurgerIngredient: React.FC<ingredientProps> = ({ type }) => {\n  let ingredient: JSX.Element | null = null;\n\n  switch (type) {\n    case 'bread-bottom':\n      ingredient = <div className={classes.BreadBottom} />;\n      break;\n    case 'bread-top':\n      ingredient = (\n        <div className={classes.BreadTop}>\n          <div className={classes.Seeds1} />\n          <div className={classes.Seeds2} />\n        </div>\n      );\n      break;\n    case 'meat':\n      ingredient = <div className={classes.Meat} />;\n      break;\n    case 'cheese':\n      ingredient = <div className={classes.Cheese} />;\n      break;\n    case 'lettuce':\n      ingredient = <div className={classes.Lettuce} />;\n      break;\n    case 'bacon':\n      ingredient = <div className={classes.Bacon} />;\n      break;\n    default:\n      ingredient = null;\n      break;\n  }\n\n  return ingredient;\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nexport type BurgerProps = {\n  ingredients: IngredientType;\n};\n\nexport type IngredientType = {\n  lettuce: number;\n  bacon: number;\n  cheese: number;\n  meat: number;\n};\n\nexport type ig = keyof IngredientType;\n\nconst Burger: React.FC<BurgerProps> = ({ ingredients }) => {\n  let transformedIngredients: JSX.Element[] | JSX.Element = (Object.keys(\n    ingredients\n  ) as ig[])\n    .map((key: ig) => {\n      return [...Array(ingredients[key])].map((_, i) => (\n        <BurgerIngredient key={key + i} type={key} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please Start adding ingredients!</p>;\n  }\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type='bread-top' />\n      {transformedIngredients}\n      <BurgerIngredient type='bread-bottom' />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from 'react';\nimport classes from './BuildControl.module.css';\n\ntype BuildControlProps = {\n  label: string;\n  added: () => void;\n  removed: () => void;\n  disabled: boolean;\n};\n\nconst BuildControl: React.FC<BuildControlProps> = ({\n  label,\n  added,\n  removed,\n  disabled,\n}) => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{label}</div>\n    <button className={classes.Less} onClick={removed} disabled={disabled}>\n      Less\n    </button>\n    <button className={classes.More} onClick={added}>\n      More\n    </button>\n  </div>\n);\n\nexport default BuildControl;\n","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.module.css';\nimport { ig } from '../Burger';\n\nexport type DisableType = {\n  lettuce: boolean;\n  bacon: boolean;\n  cheese: boolean;\n  meat: boolean;\n};\n\ntype BuildControlsProps = {\n  ingredientAdded: (type: ig) => void;\n  ingredientRemoved: (type: ig) => void;\n  disabled: DisableType;\n  price: number;\n  purchaseable: boolean;\n  ordered: () => void;\n  isAuth: boolean;\n};\n\nconst controls = [\n  { label: 'Lettuce', type: 'lettuce' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' },\n];\n\nconst BuildControls: React.FC<BuildControlsProps> = ({\n  ingredientAdded,\n  ingredientRemoved,\n  disabled,\n  price,\n  purchaseable,\n  ordered,\n  isAuth,\n}) => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${price.toFixed(2)}</strong>\n      </p>\n      {controls.map((control) => (\n        <BuildControl\n          key={control.label}\n          label={control.label}\n          added={() => ingredientAdded(control.type as ig)}\n          removed={() => ingredientRemoved(control.type as ig)}\n          disabled={disabled[control.type as ig]}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        disabled={!purchaseable}\n        onClick={ordered}\n      >\n        {isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControls;\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\ntype BackdropProps = {\n  show: boolean;\n  clicked?: () => void;\n};\n\nconst Backdrop: React.FC<BackdropProps> = ({ show, clicked }) =>\n  show ? <div className={classes.Backdrop} onClick={clicked}></div> : null;\n\nexport default Backdrop;\n","import React from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\ntype ModalProps = {\n  children?: React.ReactNode;\n  show: boolean;\n  modalClosed?: () => void;\n};\n\nclass Modal extends React.Component<ModalProps> {\n  // Renders only if Modal is visible\n  shouldComponentUpdate(nextProps: ModalProps) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n\n  // componentDidUpdate() {\n  //   console.log('[Modal] DidUpdate');\n  // }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport classes from './Button.module.css';\n\ntype ButtonProps = {\n  clicked: () => void;\n  btnType: string;\n};\n\nconst Button: React.FC<ButtonProps> = ({ children, btnType, clicked }) => (\n  <button\n    className={[classes.Button, classes[btnType]].join(' ')}\n    onClick={clicked}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport { IngredientType, ig } from '../Burger';\nimport Button from '../../UI/Button/Button';\n\ntype OrderSummaryProps = {\n  ingredients: IngredientType;\n  purchaseCancel: () => void;\n  purchaseContinue: () => void;\n  price: number;\n};\n\n// This could be a React.FC\nclass OrderSummary extends React.Component<OrderSummaryProps> {\n  // componentDidUpdate() {\n  //   console.log('[OrderSummary] DidUpdate');\n  // }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map((key) => (\n      <li key={key}>\n        {key}: {this.props.ingredients[key as ig]}\n      </li>\n    ));\n    return (\n      <React.Fragment>\n        <h3>Your Order</h3>\n        <p>Delicious Burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: ${this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue Checkout?</p>\n        <Button clicked={this.props.purchaseCancel} btnType={'Danger'}>\n          CANCEL\n        </Button>\n        <Button clicked={this.props.purchaseContinue} btnType={'Success'}>\n          CONTINUE\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner: React.FC = () => (\n  <div className={classes.Loader}>Loading...</div>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport { AxiosInstance } from 'axios';\n\ntype errorHandlerState = {\n  error: Error | null;\n};\n\nconst withErrorHandler = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  axios: AxiosInstance\n) =>\n  class extends React.Component<P, errorHandlerState> {\n    reqInter: any;\n    resInter: any;\n\n    constructor(props: any) {\n      super(props);\n\n      this.state = {\n        error: null,\n      };\n    }\n\n    UNSAFE_componentWillMount() {\n      this.reqInter = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInter = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInter);\n      axios.interceptors.response.eject(this.resInter);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <React.Fragment>\n          <Modal\n            show={!!this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  };\n\nexport default withErrorHandler;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://burger-builder-j58j8.firebaseio.com',\n});\n\nexport const KEY = 'AIzaSyCMCxIuM1NDFYM9A35GX4ELuh6B_KpKu_8';\n\nexport default instance;\n","import {\n  ADD_INGREDIENT,\n  REM_INGREDIENT,\n  SET_INGREDIENTS,\n  ERR_INGREDIENTS,\n} from './actionTypes';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from '../../index';\nimport { Action } from 'redux';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (key: string) => ({\n  type: ADD_INGREDIENT,\n  key: key,\n});\n\nexport const remIngredient = (key: string) => ({\n  type: REM_INGREDIENT,\n  key: key,\n});\n\ntype ingType = {\n  lettuce: number;\n  bacon: number;\n  cheese: number;\n  meat: number;\n};\n\nconst setIngredients = (ingredients: ingType) => ({\n  type: SET_INGREDIENTS,\n  ingredients: ingredients,\n});\n\nconst errIngredients = () => ({\n  type: ERR_INGREDIENTS,\n});\n\nexport const initIngredients = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => async (dispatch) => {\n  try {\n    const response = await axios.get('/ingredients.json');\n    dispatch(setIngredients(response.data));\n  } catch (error) {\n    dispatch(errIngredients());\n    console.error(error);\n  }\n};\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REM_INGREDIENT = 'REM_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const ERR_INGREDIENTS = 'ERR_INGREDIENTS';\n\nexport const PURCHASE_SUCCESS = 'PURCHASE_SUCCESS';\nexport const PURCHASE_FAIL = 'PURCHASE_FAIL';\nexport const PURCHASE_START = 'PURCHASE_START';\nexport const PURCHASE_RESET = 'PURCHASE_RESET';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\n","import {\n  PURCHASE_FAIL,\n  PURCHASE_SUCCESS,\n  PURCHASE_START,\n  FETCH_ORDERS_SUCCESS,\n  FETCH_ORDERS_FAIL,\n  FETCH_ORDERS_START,\n  PURCHASE_RESET,\n} from './actionTypes';\nimport { RootState } from '../../index';\nimport { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport axios from '../../axios-orders';\nimport { orderType } from '../../containers/Checkout/Orders/Orders';\n\nconst purchaseSuccess = (id: any, orderData: orderType) => ({\n  type: PURCHASE_SUCCESS,\n  orderId: id,\n  orderData: orderData,\n});\n\nconst purchaseFail = (error: any) => ({\n  type: PURCHASE_FAIL,\n  error: error,\n});\n\nconst purchase = () => ({\n  type: PURCHASE_START,\n});\n\nexport const purchaseReset = () => ({\n  type: PURCHASE_RESET,\n});\n\nexport const purchaseStart = (\n  orderData: orderType,\n  token: string\n): ThunkAction<void, RootState, unknown, Action<string>> => async (\n  dispatch\n) => {\n  try {\n    dispatch(purchase());\n    const response = await axios.post(`/orders.json?auth=${token}`, orderData);\n    dispatch(purchaseSuccess(response.data.name, orderData));\n  } catch (error) {\n    dispatch(purchaseFail(error));\n    console.error(error);\n  }\n};\n\nconst fetchOrdersSuccess = (orders: orderType[]) => ({\n  type: FETCH_ORDERS_SUCCESS,\n  orders: orders,\n});\n\nconst fetchOrdersFail = (error: Error) => ({\n  type: FETCH_ORDERS_FAIL,\n  error: error,\n});\n\nconst fetchOrdersStart = () => ({\n  type: FETCH_ORDERS_START,\n});\n\nexport const fetchOrders = (\n  token: string\n): ThunkAction<void, RootState, unknown, Action<string>> => async (\n  dispatch\n) => {\n  dispatch(fetchOrdersStart());\n  try {\n    const response = await axios.get(`/orders.json?auth=${token}`);\n    const fetchedOrders: orderType[] = [];\n    for (let key in response.data) {\n      if (response.data[key].userId === localStorage.getItem('userId')) {\n        fetchedOrders.push({\n          ...response.data[key],\n          id: key,\n        });\n      }\n    }\n    dispatch(fetchOrdersSuccess(fetchedOrders));\n  } catch (error) {\n    dispatch(fetchOrdersFail(error));\n  }\n};\n","import { AUTH_FAIL, AUTH_START, AUTH_SUCCESS, LOG_OUT } from './actionTypes';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from '../../index';\nimport { Action } from 'redux';\nimport { KEY } from '../../axios-orders';\nimport axios from 'axios';\n\nconst authStart = () => ({\n  type: AUTH_START,\n});\n\nconst authSuccess = (token: string, userId: string) => ({\n  type: AUTH_SUCCESS,\n  idToken: token,\n  userId: userId,\n});\n\nconst authFail = (error: Error) => ({\n  type: AUTH_FAIL,\n  error: error,\n});\n\nexport const logOut = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: LOG_OUT,\n  };\n};\n\ntype authThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nconst checkAuthTimeout = (expireTime: number): authThunk => async (\n  dispatch\n) => {\n  setTimeout(() => {\n    dispatch(logOut());\n  }, +expireTime * 1000);\n};\n\nexport const auth = (\n  email: string,\n  password: string,\n  method: boolean\n): authThunk => async (dispatch) => {\n  try {\n    dispatch(authStart());\n    if (method) {\n      const response = await axios.post(\n        `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${KEY}`,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      );\n      const expirationDate = new Date(\n        new Date().getTime() + response.data.expiresIn * 1000\n      );\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate.toString());\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n    } else {\n      const response = await axios.post(\n        `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${KEY}`,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      );\n      const expirationDate = new Date(\n        new Date().getTime() + response.data.expiresIn * 1000\n      );\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate.toString());\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }\n  } catch (error) {\n    dispatch(authFail(error));\n  }\n};\n\nexport const authCheckState = (): authThunk => (dispatch) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    dispatch(logOut());\n  } else {\n    const expirationDate = new Date(localStorage.getItem('expirationDate')!);\n    if (expirationDate <= new Date()) {\n      dispatch(logOut());\n    } else {\n      const userId = localStorage.getItem('userId')!;\n      dispatch(authSuccess(token, userId));\n      dispatch(\n        checkAuthTimeout(\n          (expirationDate.getTime() - new Date().getTime()) / 1000\n        )\n      );\n    }\n  }\n};\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Burger, { IngredientType, ig } from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { connect, ConnectedProps } from 'react-redux';\nimport withErrorHandler from '../hoc/withErrorHandling';\nimport axios from '../../axios-orders';\nimport * as actionCreator from '../../store/actions/index';\n\ntype BurgerState = {\n  purchaseable: boolean;\n  purchasing: boolean;\n};\n\ntype stateType = {\n  burger: {\n    ingredients: {\n      lettuce: number;\n      bacon: number;\n      cheese: number;\n      meat: number;\n    };\n    price: number;\n    error: boolean;\n  };\n  auth: { token: string };\n};\n\nexport const mapState = (state: stateType) => ({\n  ing: {\n    lettuce: state.burger.ingredients.lettuce,\n    bacon: state.burger.ingredients.bacon,\n    cheese: state.burger.ingredients.cheese,\n    meat: state.burger.ingredients.meat,\n  },\n  prc: state.burger.price,\n  err: state.burger.error,\n  isAuth: state.auth.token !== '',\n});\n\nconst mapDispatch = {\n  addHandler: (key: string) => actionCreator.addIngredient(key),\n  delHandler: (key: string) => actionCreator.remIngredient(key),\n  initHandler: () => actionCreator.initIngredients(),\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype BurgerBuilderProps = PropsFromRedux & RouteComponentProps;\n\nclass BurgerBuilder extends React.Component<BurgerBuilderProps, BurgerState> {\n  state = {\n    purchaseable: false,\n    purchasing: false,\n  };\n\n  updatePurchaseState = (ingredients: IngredientType) => {\n    const sum = Object.keys(ingredients)\n      .map((key) => ingredients[key as ig])\n      .reduce((sum, el) => sum + el, 0);\n\n    this.setState({ purchaseable: sum > 0 });\n  };\n\n  purchaseHandler = () => {\n    if (this.props.isAuth) {\n      this.setState({ purchasing: !this.state.purchasing });\n    } else {\n      this.props.history.push('/burger-builder/auth');\n    }\n  };\n\n  purchaseContineHandler = () => {\n    this.props.history.push({\n      pathname: '/burger-builder/checkout',\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.prc <= 8) {\n      this.props.initHandler();\n    }\n\n    if (this.props.prc > 8 && !this.state.purchaseable) {\n      this.setState({\n        purchaseable: true,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.prc > 8 && !this.state.purchaseable) {\n      this.setState({\n        purchaseable: true,\n      });\n    } else if (this.props.prc === 8 && this.state.purchaseable) {\n      this.setState({\n        purchaseable: false,\n      });\n    }\n  }\n\n  render() {\n    const disableInfo: IngredientType = {\n      ...this.props.ing,\n    };\n\n    const disableButton = {\n      lettuce: false,\n      bacon: false,\n      cheese: false,\n      meat: false,\n    };\n\n    let key: ig;\n    for (key in disableInfo) {\n      disableButton[key] = disableInfo[key] <= 0 ? true : false;\n    }\n\n    let orderSummary;\n\n    let burger =\n      this.props.err !== null ? (\n        <p>Ingredients can't be loaded!</p>\n      ) : (\n        <Spinner />\n      );\n\n    if (this.props.ing) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ing}\n          purchaseCancel={this.purchaseHandler}\n          purchaseContinue={this.purchaseContineHandler}\n          price={this.props.prc}\n        />\n      );\n      burger = (\n        <React.Fragment>\n          <Burger ingredients={this.props.ing} />\n          <BuildControls\n            ingredientAdded={this.props.addHandler}\n            ingredientRemoved={this.props.delHandler}\n            disabled={disableButton}\n            price={this.props.prc}\n            purchaseable={this.state.purchaseable}\n            ordered={this.purchaseHandler}\n            isAuth={this.props.isAuth}\n          />\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connector(withErrorHandler(BurgerBuilder, axios));\n","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst Logo: React.FC<{ height?: string }> = ({ height }) => (\n  <div className={classes.Logo}>\n    <img src={burgerLogo} alt='Burger Builder' style={{ height: height }} />\n  </div>\n);\n\nexport default Logo;\n","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\ntype NavigationItemProps = {\n  link: string;\n};\n\nconst NavigationItem: React.FC<NavigationItemProps> = ({ link, children }) => (\n  <li className={classes.NavigationItem}>\n    <NavLink to={link} activeClassName={classes.active} exact>\n      {children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\ntype NavItemProps = {\n  isAuthenticated: boolean;\n};\n\nconst NavigationItems = ({ isAuthenticated }: NavItemProps) => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link='/burger-builder'>Burger Builder</NavigationItem>\n    {isAuthenticated ? (\n      <NavigationItem link='/burger-builder/orders'>Orders</NavigationItem>\n    ) : null}\n    {!isAuthenticated ? (\n      <NavigationItem link='/burger-builder/auth'>Authenticate</NavigationItem>\n    ) : (\n      <NavigationItem link='/burger-builder/logout'>Logout</NavigationItem>\n    )}\n  </ul>\n);\n\nexport default NavigationItems;\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\ntype DrawerToggleProps = {\n  click: () => void;\n};\n\nconst DrawerToggle: React.FC<DrawerToggleProps> = ({ click }) => {\n  return (\n    <div onClick={click} className={classes.DrawerToggle}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default DrawerToggle;\n","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\ntype ToolbarProps = {\n  open: () => void;\n  isAuth: boolean;\n};\n\nconst Toolbar: React.FC<ToolbarProps> = ({ open, isAuth }) => {\n  return (\n    <header className={classes.Toolbar}>\n      <DrawerToggle click={open} />\n      <div className={classes.Logo}>\n        <Logo />\n      </div>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={isAuth} />\n      </nav>\n    </header>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\ntype SideDrawerProps = {\n  open: boolean;\n  closed: () => void;\n  isAuth: boolean;\n};\n\nconst SideDrawer: React.FC<SideDrawerProps> = ({ open, closed, isAuth }) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <React.Fragment>\n      <Backdrop show={open} clicked={closed} />\n      <div className={attachedClasses.join(' ')}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={isAuth} />\n        </nav>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SideDrawer;\n","import React from 'react';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect, ConnectedProps } from 'react-redux';\n\ntype LayoutStateType = {\n  showSideDrawer: boolean;\n};\n\ntype stateType = {\n  auth: { token: string };\n};\n\nconst mapState = (state: stateType) => ({\n  isAuthenticated: state.auth.token !== '',\n});\n\nconst connector = connect(mapState);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype LayoutProps = Props & PropsFromRedux;\n\nclass Layout extends React.Component<LayoutProps, LayoutStateType> {\n  state = {\n    showSideDrawer: false,\n  };\n\n  sideDrawerCloseHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n\n  openDrawerHandler = () => {\n    this.setState((prevState: LayoutStateType) => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Toolbar\n          open={this.openDrawerHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerCloseHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connector(Layout);\n","import React from 'react';\nimport classes from './CheckoutSummary.module.css';\nimport Burger, { IngredientType } from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\ntype CheckoutSummaryProps = {\n  ingredients: IngredientType;\n  cancel: () => void;\n  continueCheck: () => void;\n};\n\nconst CheckoutSummary: React.FC<CheckoutSummaryProps> = ({\n  ingredients,\n  cancel,\n  continueCheck,\n}) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Burger ingredients={ingredients} />\n      </div>\n      <Button btnType='Danger' clicked={cancel}>\n        CANCEL\n      </Button>\n      <Button btnType='Success' clicked={continueCheck}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport classes from './Form.module.css';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  createMuiTheme,\n  ThemeProvider,\n  MenuItem,\n  Button,\n  TextField,\n} from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport axios from '../../../../axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandling';\nimport {\n  purchaseStart,\n  initIngredients,\n  purchaseReset,\n} from '../../../../store/actions/index';\nimport { ConnectedProps, connect } from 'react-redux';\nimport { IngredientType } from '../../../../components/Burger/Burger';\nimport { orderType } from '../../Orders/Orders';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\n\nconst mapDispatch = {\n  orderBurger: (orderData: orderType, token: string) =>\n    purchaseStart(orderData, token),\n  ingReset: () => initIngredients(),\n  purReset: () => purchaseReset(),\n};\n\ntype stateType = {\n  burger: {\n    ingredients: IngredientType;\n    price: number;\n  };\n  order: {\n    loading: boolean;\n    purchased: boolean;\n  };\n  auth: { token: string; userId: string };\n};\n\nconst mapState = (state: stateType) => ({\n  ingredients: {\n    lettuce: state.burger.ingredients.lettuce,\n    bacon: state.burger.ingredients.bacon,\n    cheese: state.burger.ingredients.cheese,\n    meat: state.burger.ingredients.meat,\n  },\n  price: state.burger.price,\n  loading: state.order.loading,\n  token: state.auth.token,\n  userId: state.auth.userId,\n  purchased: state.order.purchased,\n});\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange,\n  },\n});\n\ntype FormProps = {\n  order: () => void;\n};\n\ntype IFormInputs = {\n  name: string;\n  email: string;\n  address: string;\n  city: string;\n  zip: string;\n  delivery: string;\n};\n\nconst schema = yup.object({\n  name: yup.string().required('Name Required'),\n  email: yup.string().email().required('Email Required'),\n  address: yup.string().required('Address Required'),\n  city: yup.string().required('City Required'),\n  zip: yup.string().required('Zip Code Required').min(5),\n  delivery: yup.string().required('Delivery Speed Required'),\n});\n\ntype Props = PropsFromRedux & FormProps;\n\nfunction Form({\n  order,\n  orderBurger,\n  ingReset,\n  purReset,\n  ingredients,\n  price,\n  loading,\n  token,\n  purchased,\n  userId,\n}: Props) {\n  const style = useStyles();\n\n  const { register, handleSubmit, errors, control, formState } = useForm<\n    IFormInputs\n  >({\n    resolver: yupResolver(schema),\n    mode: 'all',\n  });\n\n  const onSubmit = (data: IFormInputs) => {\n    orderBurger(\n      {\n        customer: {\n          name: data.name,\n          email: data.email,\n          address: data.address,\n          city: data.city,\n          zip: data.zip,\n        },\n        ingredients: ingredients,\n        price: price,\n        delivery: data.delivery,\n        userId: userId,\n      },\n      token\n    );\n  };\n\n  const purchaseCheck = () => {\n    if (purchased) {\n      ingReset();\n      purReset();\n      order();\n    }\n  };\n\n  purchaseCheck();\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.Input}>\n          <ThemeProvider theme={theme}>\n            <TextField\n              className={style.margin}\n              type='text'\n              label='Name'\n              name='name'\n              inputRef={register}\n              error={!!errors.name}\n              helperText={errors.name?.message}\n              variant='outlined'\n            />\n            <TextField\n              className={style.margin}\n              type='text'\n              label='Email'\n              name='email'\n              inputRef={register}\n              variant='outlined'\n              error={!!errors.email}\n              helperText={errors.email?.message}\n            />\n            <TextField\n              className={style.margin}\n              type='text'\n              label='Address'\n              name='address'\n              inputRef={register}\n              variant='outlined'\n              error={!!errors.address}\n              helperText={errors.address?.message}\n            />\n            <TextField\n              className={style.margin}\n              type='text'\n              label='City'\n              name='city'\n              inputRef={register}\n              variant='outlined'\n              error={!!errors.city}\n              helperText={errors.city?.message}\n            />\n            <TextField\n              className={style.margin}\n              label='Zip'\n              type='text'\n              name='zip'\n              inputRef={register}\n              variant='outlined'\n              error={!!errors.zip}\n              helperText={errors.zip?.message}\n            />\n            <Controller\n              as={\n                <TextField\n                  label='Delivery'\n                  className={style.margin}\n                  select\n                  variant='outlined'\n                  error={!!errors.delivery}\n                  helperText={errors.delivery?.message}\n                  value=''\n                >\n                  <MenuItem value=''></MenuItem>\n                  <MenuItem value='fast'>Fast</MenuItem>\n                  <MenuItem value='slow'>Slow</MenuItem>\n                </TextField>\n              }\n              name='delivery'\n              defaultValue=''\n              control={control}\n            />\n            <Button\n              color='primary'\n              type='submit'\n              size='large'\n              disabled={!formState.isValid}\n            >\n              ORDER\n            </Button>\n          </ThemeProvider>\n        </form>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default connector(withErrorHandler(Form, axios));\n","import React from 'react';\nimport classes from './ContactData.module.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Form from './Form/Form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { mapState } from '../../BurgerBuilder/BurgerBuilder';\nimport withErrorHandler from '../../hoc/withErrorHandling';\nimport axios from '../../../axios-orders';\n\nconst connector = connect(mapState);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ContactDataProps = RouteComponentProps & PropsFromRedux;\n\nclass ContactData extends React.Component<ContactDataProps> {\n  state = {\n    loading: false,\n  };\n\n  orderHandler = () => {\n    this.props.history.push('/burger-builder');\n  };\n\n  render() {\n    let form = <Form order={this.orderHandler} />;\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter Your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default connector(withErrorHandler(ContactData, axios));\n","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { RouteComponentProps, Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { mapState } from '../BurgerBuilder/BurgerBuilder';\n\nconst connector = connect(mapState);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype CheckoutProps = RouteComponentProps & PropsFromRedux;\n\nclass Checkout extends React.Component<CheckoutProps> {\n  cancelHandler = () => {\n    this.props.history.goBack();\n  };\n\n  continueHandler = () => {\n    this.props.history.replace('/burger-builder/checkout/contact-data');\n  };\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.props.ing}\n          cancel={this.cancelHandler}\n          continueCheck={this.continueHandler}\n        />\n        <Route\n          path={`${this.props.match.url}/contact-data`}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connector(Checkout);\n","import React from 'react';\nimport classes from './Order.module.css';\nimport { IngredientType, ig } from '../Burger/Burger';\n\ntype OrderProps = {\n  ingredients: IngredientType;\n  totalPrice: number;\n};\n\nconst Order: React.FC<OrderProps> = ({ ingredients, totalPrice }) => {\n  const ingAll = [];\n  for (let ing in ingredients) {\n    ingAll.push({\n      name: ing,\n      amount: ingredients[ing as ig],\n    });\n  }\n  const ingOut = ingAll.map(({ name, amount }) => (\n    <span\n      key={name}\n      style={{\n        textTransform: 'capitalize',\n        display: 'inline-block',\n        margin: '0 8px',\n        border: '1px solid #eee',\n        padding: '5px',\n      }}\n    >\n      {name} ({amount})\n    </span>\n  ));\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingOut}</p>\n      <p>Price: {totalPrice}</p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React from 'react';\nimport Order from '../../../components/Order/Order';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../../containers/hoc/withErrorHandling';\nimport { IngredientType } from '../../../components/Burger/Burger';\nimport { fetchOrders } from '../../../store/actions/index';\nimport { ConnectedProps, connect } from 'react-redux';\n\ntype customerType = {\n  city: string;\n  address: string;\n  zip: string;\n  email: string;\n  name: string;\n};\n\nexport type orderType = {\n  customer: customerType;\n  delivery: string;\n  ingredients: IngredientType;\n  price: number;\n  userId: string;\n};\n\ntype stateType = {\n  order: { orders: orderType[]; loading: boolean };\n  auth: { token: string };\n};\n\nconst mapState = (state: stateType) => ({\n  orders: state.order.orders,\n  loading: state.order.loading,\n  token: state.auth.token,\n});\n\nconst mapDispatch = {\n  onFetchOrders: (token: string) => fetchOrders(token),\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass Orders extends React.Component<PropsFromRedux, stateType> {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token);\n  }\n\n  render() {\n    const orders: orderType[] | [] = this.props.orders;\n    let orderRender;\n    if (orders.length >= 1) {\n      orderRender = orders.map((order, index) => (\n        <Order\n          key={index}\n          ingredients={order.ingredients}\n          totalPrice={order.price}\n        />\n      ));\n    }\n    if (this.props.loading) {\n      orderRender = <Spinner />;\n    }\n    return <div>{orderRender}</div>;\n  }\n}\n\nexport default connector(withErrorHandler(Orders, axios));\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport classes from './Auth.module.css';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\nimport { Typography } from '@material-ui/core';\nimport { auth } from '../../store/actions/index';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\n\ntype IFormInputs = {\n  email: string;\n  password: string;\n  passwordConfirmation?: string;\n};\n\nconst schema = yup.object({\n  email: yup.string().email().required('Email Required'),\n  password: yup\n    .string()\n    .required('Password Required')\n    .min(6, 'Password minimum length of 6 characters required.'),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref('password'), undefined], 'Passwords must match'),\n});\n\ntype stateType = {\n  auth: {\n    loading: boolean;\n    error: Error;\n    token: string;\n  };\n};\n\nconst mapState = (state: stateType) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n  isAuth: state.auth.token !== '',\n});\n\nconst mapDispatch = {\n  onAuth: (email: string, password: string, method: boolean) =>\n    auth(email, password, method),\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction Auth({ onAuth, loading, error, isAuth }: PropsFromRedux) {\n  const [mode, setMode] = useState(true);\n  const style = useStyles();\n\n  const { handleSubmit, errors, formState, register } = useForm<IFormInputs>({\n    resolver: yupResolver(schema),\n    mode: 'all',\n  });\n\n  const onSubmit = (data: IFormInputs) => {\n    onAuth(data.email, data.password, mode);\n  };\n\n  const switchModeHandler = () => {\n    setMode(!mode);\n  };\n\n  let errorMessage = null;\n  if (error) {\n    errorMessage = <p>{error.message}</p>;\n  }\n\n  let authRedirect = null;\n  if (isAuth) {\n    authRedirect = <Redirect to='/burger-builder' />;\n  }\n\n  const PwConfirm = (\n    <TextField\n      className={style.margin}\n      type='password'\n      label='Password'\n      name='passwordConfirmation'\n      inputRef={register}\n      error={!!errors.passwordConfirmation}\n      helperText={errors.passwordConfirmation?.message}\n      variant='outlined'\n      required\n    />\n  );\n\n  const Form = (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.Input}>\n      <Card className={classes.Input2}>\n        {errorMessage}\n        {authRedirect}\n        <Typography variant='h5'>{!mode ? 'Sign In' : 'Sign Up'}</Typography>\n        <ThemeProvider theme={theme}>\n          <TextField\n            className={style.margin}\n            type='email'\n            label='Email'\n            name='email'\n            inputRef={register}\n            error={!!errors.email}\n            helperText={errors.email?.message}\n            variant='outlined'\n            required\n          />\n          <TextField\n            className={style.margin}\n            type='password'\n            label='Password'\n            name='password'\n            inputRef={register}\n            error={!!errors.password}\n            helperText={errors.password?.message}\n            variant='outlined'\n            required\n          />\n          {mode ? PwConfirm : null}\n          <Button\n            color='primary'\n            type='submit'\n            size='large'\n            disabled={!formState.isValid}\n          >\n            SUBMIT\n          </Button>\n        </ThemeProvider>\n      </Card>\n      <br />\n      <Button onClick={switchModeHandler}>\n        SWITCH TO {mode ? 'SIGN IN' : 'SIGN UP'}\n      </Button>\n    </form>\n  );\n\n  return <React.Fragment>{loading ? <Spinner /> : Form}</React.Fragment>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n      width: '80%',\n    },\n  })\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange,\n  },\n});\n\nexport default connector(Auth);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { logOut } from '../../../store/actions/index';\nimport { Redirect } from 'react-router-dom';\n\ntype stateType = {\n  auth: {};\n};\n\nconst mapState = (state: stateType) => ({});\n\nconst mapDispatch = {\n  onLogout: () => logOut(),\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass Logout extends React.Component<PropsFromRedux> {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n  render() {\n    return <Redirect to='/burger-builder' />;\n  }\n}\n\nexport default connector(Logout);\n","import React from 'react';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Layout from './containers/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Orders from './containers/Checkout/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { authCheckState } from './store/actions/index';\nimport { connect, ConnectedProps } from 'react-redux';\n\ntype stateProps = {\n  auth: { token: string };\n};\n\nconst mapState = (state: stateProps) => ({\n  isAuth: state.auth.token !== '',\n});\n\nconst mapDispatch = {\n  authCheck: () => authCheckState(),\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass App extends React.Component<PropsFromRedux> {\n  componentDidMount() {\n    this.props.authCheck();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/burger-builder/auth' component={Auth} />\n        <Route path='/burger-builder' exact component={BurgerBuilder} />\n        <Redirect to='/burger-builder' />\n      </Switch>\n    );\n\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path='/burger-builder/checkout' component={Checkout} />\n          <Route path='/burger-builder/orders' component={Orders} />\n          <Route path='/burger-builder/logout' component={Logout} />\n          <Route path='/burger-builder' exact component={BurgerBuilder} />\n          <Redirect to='/burger-builder' />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nexport default connector(App);\n","import {\n  ADD_INGREDIENT,\n  REM_INGREDIENT,\n  SET_INGREDIENTS,\n  ERR_INGREDIENTS,\n} from '../actions/actionTypes';\n\ntype AddIngredientAction = {\n  type: typeof ADD_INGREDIENT;\n  key: keyof actionKey;\n};\n\ntype RemIngredientAction = {\n  type: typeof REM_INGREDIENT;\n  key: keyof actionKey;\n};\n\ntype SetIngredientAction = {\n  type: typeof SET_INGREDIENTS;\n  ingredients: actionKey;\n};\n\ntype ErrIngredientAction = {\n  type: typeof ERR_INGREDIENTS;\n};\n\ntype actionType =\n  | AddIngredientAction\n  | RemIngredientAction\n  | SetIngredientAction\n  | ErrIngredientAction;\n\ntype actionKey = {\n  lettuce: number;\n  bacon: number;\n  cheese: number;\n  meat: number;\n};\n\ntype initialStateType = {\n  ingredients: {\n    lettuce: number;\n    bacon: number;\n    cheese: number;\n    meat: number;\n  };\n  price: number;\n  error: boolean;\n};\n\nconst initialState: initialStateType = {\n  ingredients: {\n    lettuce: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0,\n  },\n  price: 8,\n  error: false,\n};\n\nconst INGREDIENT_PRICES = {\n  lettuce: 0.25,\n  bacon: 1.0,\n  cheese: 0.75,\n  meat: 1.5,\n};\n\nconst reducer = (state = initialState, action: actionType) => {\n  switch (action.type) {\n    case ADD_INGREDIENT: {\n      return {\n        ingredients: {\n          ...state.ingredients,\n          [action.key]: state.ingredients![action.key] + 1,\n        },\n        price: state.price + INGREDIENT_PRICES[action.key],\n      };\n    }\n    case REM_INGREDIENT: {\n      return {\n        ingredients: {\n          ...state.ingredients,\n          [action.key]: state.ingredients![action.key] - 1,\n        },\n        price: state.price - INGREDIENT_PRICES[action.key],\n      };\n    }\n    case SET_INGREDIENTS: {\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        error: false,\n      };\n    }\n    case ERR_INGREDIENTS: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const updateObject = <T, U>(oldObject: T, updatedValues: U) => {\n  return {\n    ...oldObject,\n    ...updatedValues,\n  };\n};\n\nexport default updateObject;\n","import {\n  PURCHASE_FAIL,\n  PURCHASE_SUCCESS,\n  PURCHASE_START,\n  PURCHASE_RESET,\n  FETCH_ORDERS_FAIL,\n  FETCH_ORDERS_START,\n  FETCH_ORDERS_SUCCESS,\n} from '../actions/actionTypes';\nimport { orderType } from '../../containers/Checkout/Orders/Orders';\nimport updateObject from '../utility';\n\ntype initialStateType = {\n  orders: orderType[];\n  loading: boolean;\n  purchased: boolean;\n};\n\nconst initialState: initialStateType = {\n  orders: [],\n  loading: false,\n  purchased: false,\n};\n\ntype PurchaseResetAction = {\n  type: typeof PURCHASE_RESET;\n};\n\ntype PurchaseStartAction = {\n  type: typeof PURCHASE_START;\n};\n\ntype PurchaseFailAction = {\n  type: typeof PURCHASE_FAIL;\n  error: Error;\n};\n\ntype PurchaseSuccessAction = {\n  type: typeof PURCHASE_SUCCESS;\n  orderId: number;\n  orderData: orderType;\n};\n\ntype FetchOrderSuccess = {\n  type: typeof FETCH_ORDERS_SUCCESS;\n  orders: orderType[];\n};\n\ntype FetchOrderFail = {\n  type: typeof FETCH_ORDERS_FAIL;\n  error: Error;\n};\n\ntype FetchOrderStart = {\n  type: typeof FETCH_ORDERS_START;\n};\n\ntype actionType =\n  | PurchaseFailAction\n  | PurchaseSuccessAction\n  | PurchaseStartAction\n  | FetchOrderFail\n  | FetchOrderStart\n  | FetchOrderSuccess\n  | PurchaseResetAction;\n\nconst reducer = (state = initialState, action: actionType) => {\n  switch (action.type) {\n    case PURCHASE_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PURCHASE_FAIL:\n      return state;\n    case PURCHASE_SUCCESS: {\n      const newOrder = {\n        ...action.orderData,\n        id: action.orderId,\n      };\n      return {\n        ...state,\n        orders: state.orders.concat(newOrder),\n        loading: false,\n        purchased: true,\n      };\n    }\n    case PURCHASE_RESET:\n      return updateObject(state, { purchased: false });\n    case FETCH_ORDERS_START:\n      return updateObject(state, { loading: true });\n    case FETCH_ORDERS_SUCCESS:\n      return updateObject(state, { orders: action.orders, loading: false });\n    case FETCH_ORDERS_FAIL:\n      return updateObject(state, { loading: false });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  AUTH_FAIL,\n  AUTH_START,\n  AUTH_SUCCESS,\n  LOG_OUT,\n} from '../actions/actionTypes';\n\nexport type authDataType = {\n  idToken: string; // A Firebase Auth ID token for the authenticated user.\n  email: string; // The email for the authenticated user.\n  refreshToken: string; // A Firebase Auth refresh token for the authenticated user.\n  expiresIn: string; // The number of seconds in which the ID token expires.\n  localId: string; // The uid of the authenticated user.\n  registered?: boolean; // Whether the email is for an existing account.\n};\n\ntype AuthStartAction = {\n  type: typeof AUTH_START;\n};\n\ntype AuthSuccessAction = {\n  type: typeof AUTH_SUCCESS;\n  idToken: string;\n  userId: string;\n};\n\ntype AuthFailAction = {\n  type: typeof AUTH_FAIL;\n  error: Error;\n};\n\ntype LogOutAction = {\n  type: typeof LOG_OUT;\n};\n\ntype actionType =\n  | AuthFailAction\n  | AuthStartAction\n  | AuthSuccessAction\n  | LogOutAction;\n\ntype initialStateType = {\n  token: string;\n  userId: string;\n  error: Error | null;\n  loading: boolean;\n};\n\nconst initialState: initialStateType = {\n  token: '',\n  userId: '',\n  error: null,\n  loading: false,\n};\n\nconst reducer = (state = initialState, action: actionType) => {\n  switch (action.type) {\n    case AUTH_START:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false,\n      };\n    case AUTH_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    case LOG_OUT:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport burgerBuildReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst rootReducer = combineReducers({\n  burger: burgerBuildReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Lettuce\":\"BurgerIngredient_Lettuce__24-RC\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Auth_Input__2LQ-q\",\"Input2\":\"Auth_Input2__W6zPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};"],"sourceRoot":""}